/* 
 This file was generated by Dashcode and is covered by the 
 license.txt included in the project.  You may edit this file, 
 however it is recommended to first turn off the Dashcode 
 code generator otherwise the changes will be lost.
 */

function CreateButton(elementOrID, spec)
{
    var buttonElement = elementOrID;
    if (elementOrID.nodeType != Node.ELEMENT_NODE) {
        buttonElement = document.getElementById(elementOrID);
    }
    
	if (!buttonElement.loaded) {
		buttonElement.loaded = true;
        while (buttonElement.firstChild) {
            buttonElement.removeChild(buttonElement.firstChild);
        }

		var text = spec.text || '';
		if (window.dashcode && dashcode.getLocalizedString) text = dashcode.getLocalizedString(text);

		var leftImageWidth = spec.leftImageWidth || 0;
		var rightImageWidth = spec.rightImageWidth || 0;
        // when cloning template, get size from original
        var styleElement = buttonElement;
        if (spec.originalID) {
            styleElement = document.getElementById(spec.originalID);
        }
		var imagePrefix = "Parts/Images/" + styleElement.id + "_";
        var width = dashcode.getElementWidth(styleElement) || 20;
		var height = dashcode.getElementHeight(styleElement) || 20;
		
		var onclick = spec.onclick || null;
		try { onclick = eval(onclick); } catch (e) { onclick = null; }

		buttonElement.object = new AppleButton(buttonElement, text, height, imagePrefix + "left.png", imagePrefix + "left_clicked.png", leftImageWidth, imagePrefix + "middle.png", imagePrefix + "middle_clicked.png", imagePrefix + "right.png", imagePrefix + "right_clicked.png", rightImageWidth, onclick);
        buttonElement.object.element = buttonElement;
		buttonElement.object._container.childNodes[2].style.width = rightImageWidth + "px";
		buttonElement.object.setEnabled(!spec.disabled);
		buttonElement.object.textElement.style.width = (width - (leftImageWidth + rightImageWidth)) + "px";
	}

	return buttonElement.object;
}
